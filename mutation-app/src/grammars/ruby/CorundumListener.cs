//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ruby/Corundum.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CorundumParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ICorundumListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] CorundumParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] CorundumParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] CorundumParser.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] CorundumParser.Expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CorundumParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CorundumParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.global_get"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobal_get([NotNull] CorundumParser.Global_getContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.global_get"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobal_get([NotNull] CorundumParser.Global_getContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.global_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobal_set([NotNull] CorundumParser.Global_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.global_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobal_set([NotNull] CorundumParser.Global_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.global_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobal_result([NotNull] CorundumParser.Global_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.global_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobal_result([NotNull] CorundumParser.Global_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_inline_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_inline_call([NotNull] CorundumParser.Function_inline_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_inline_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_inline_call([NotNull] CorundumParser.Function_inline_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.require_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequire_block([NotNull] CorundumParser.Require_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.require_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequire_block([NotNull] CorundumParser.Require_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.pir_inline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPir_inline([NotNull] CorundumParser.Pir_inlineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.pir_inline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPir_inline([NotNull] CorundumParser.Pir_inlineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.pir_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPir_expression_list([NotNull] CorundumParser.Pir_expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.pir_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPir_expression_list([NotNull] CorundumParser.Pir_expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition([NotNull] CorundumParser.Function_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition([NotNull] CorundumParser.Function_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_definition_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition_body([NotNull] CorundumParser.Function_definition_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_definition_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition_body([NotNull] CorundumParser.Function_definition_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_definition_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition_header([NotNull] CorundumParser.Function_definition_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_definition_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition_header([NotNull] CorundumParser.Function_definition_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_name([NotNull] CorundumParser.Function_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_name([NotNull] CorundumParser.Function_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_definition_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition_params([NotNull] CorundumParser.Function_definition_paramsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_definition_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition_params([NotNull] CorundumParser.Function_definition_paramsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_definition_params_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition_params_list([NotNull] CorundumParser.Function_definition_params_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_definition_params_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition_params_list([NotNull] CorundumParser.Function_definition_params_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_definition_param_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition_param_id([NotNull] CorundumParser.Function_definition_param_idContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_definition_param_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition_param_id([NotNull] CorundumParser.Function_definition_param_idContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] CorundumParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] CorundumParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call([NotNull] CorundumParser.Function_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call([NotNull] CorundumParser.Function_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_call_param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call_param_list([NotNull] CorundumParser.Function_call_param_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_call_param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call_param_list([NotNull] CorundumParser.Function_call_param_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_call_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call_params([NotNull] CorundumParser.Function_call_paramsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_call_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call_params([NotNull] CorundumParser.Function_call_paramsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_param([NotNull] CorundumParser.Function_paramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_param([NotNull] CorundumParser.Function_paramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_unnamed_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_unnamed_param([NotNull] CorundumParser.Function_unnamed_paramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_unnamed_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_unnamed_param([NotNull] CorundumParser.Function_unnamed_paramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_named_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_named_param([NotNull] CorundumParser.Function_named_paramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_named_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_named_param([NotNull] CorundumParser.Function_named_paramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.function_call_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call_assignment([NotNull] CorundumParser.Function_call_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.function_call_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call_assignment([NotNull] CorundumParser.Function_call_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.all_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAll_result([NotNull] CorundumParser.All_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.all_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAll_result([NotNull] CorundumParser.All_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.elsif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElsif_statement([NotNull] CorundumParser.Elsif_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.elsif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElsif_statement([NotNull] CorundumParser.Elsif_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.if_elsif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_elsif_statement([NotNull] CorundumParser.If_elsif_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.if_elsif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_elsif_statement([NotNull] CorundumParser.If_elsif_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] CorundumParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] CorundumParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.unless_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnless_statement([NotNull] CorundumParser.Unless_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.unless_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnless_statement([NotNull] CorundumParser.Unless_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_statement([NotNull] CorundumParser.While_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_statement([NotNull] CorundumParser.While_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.for_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_statement([NotNull] CorundumParser.For_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.for_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_statement([NotNull] CorundumParser.For_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.init_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInit_expression([NotNull] CorundumParser.Init_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.init_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInit_expression([NotNull] CorundumParser.Init_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.all_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAll_assignment([NotNull] CorundumParser.All_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.all_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAll_assignment([NotNull] CorundumParser.All_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.for_init_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_init_list([NotNull] CorundumParser.For_init_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.for_init_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_init_list([NotNull] CorundumParser.For_init_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.cond_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCond_expression([NotNull] CorundumParser.Cond_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.cond_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCond_expression([NotNull] CorundumParser.Cond_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.loop_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop_expression([NotNull] CorundumParser.Loop_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.loop_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop_expression([NotNull] CorundumParser.Loop_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.for_loop_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_loop_list([NotNull] CorundumParser.For_loop_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.for_loop_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_loop_list([NotNull] CorundumParser.For_loop_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.statement_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_body([NotNull] CorundumParser.Statement_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.statement_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_body([NotNull] CorundumParser.Statement_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.statement_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_expression_list([NotNull] CorundumParser.Statement_expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.statement_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_expression_list([NotNull] CorundumParser.Statement_expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CorundumParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CorundumParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.dynamic_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDynamic_assignment([NotNull] CorundumParser.Dynamic_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.dynamic_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDynamic_assignment([NotNull] CorundumParser.Dynamic_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.int_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_assignment([NotNull] CorundumParser.Int_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.int_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_assignment([NotNull] CorundumParser.Int_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.float_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloat_assignment([NotNull] CorundumParser.Float_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.float_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloat_assignment([NotNull] CorundumParser.Float_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.string_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_assignment([NotNull] CorundumParser.String_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.string_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_assignment([NotNull] CorundumParser.String_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.initial_array_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitial_array_assignment([NotNull] CorundumParser.Initial_array_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.initial_array_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitial_array_assignment([NotNull] CorundumParser.Initial_array_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.array_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_assignment([NotNull] CorundumParser.Array_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.array_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_assignment([NotNull] CorundumParser.Array_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.array_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_definition([NotNull] CorundumParser.Array_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.array_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_definition([NotNull] CorundumParser.Array_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.array_definition_elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_definition_elements([NotNull] CorundumParser.Array_definition_elementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.array_definition_elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_definition_elements([NotNull] CorundumParser.Array_definition_elementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.array_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_selector([NotNull] CorundumParser.Array_selectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.array_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_selector([NotNull] CorundumParser.Array_selectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.dynamic_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDynamic_result([NotNull] CorundumParser.Dynamic_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.dynamic_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDynamic_result([NotNull] CorundumParser.Dynamic_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.dynamic_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDynamic_([NotNull] CorundumParser.Dynamic_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.dynamic_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDynamic_([NotNull] CorundumParser.Dynamic_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.int_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_result([NotNull] CorundumParser.Int_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.int_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_result([NotNull] CorundumParser.Int_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.float_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloat_result([NotNull] CorundumParser.Float_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.float_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloat_result([NotNull] CorundumParser.Float_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.string_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_result([NotNull] CorundumParser.String_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.string_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_result([NotNull] CorundumParser.String_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.comparison_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_list([NotNull] CorundumParser.Comparison_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.comparison_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_list([NotNull] CorundumParser.Comparison_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] CorundumParser.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] CorundumParser.ComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.comp_var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_var([NotNull] CorundumParser.Comp_varContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.comp_var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_var([NotNull] CorundumParser.Comp_varContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.lvalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLvalue([NotNull] CorundumParser.LvalueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.lvalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLvalue([NotNull] CorundumParser.LvalueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.rvalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRvalue([NotNull] CorundumParser.RvalueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.rvalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRvalue([NotNull] CorundumParser.RvalueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.break_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_expression([NotNull] CorundumParser.Break_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.break_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_expression([NotNull] CorundumParser.Break_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.literal_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral_t([NotNull] CorundumParser.Literal_tContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.literal_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral_t([NotNull] CorundumParser.Literal_tContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.float_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloat_t([NotNull] CorundumParser.Float_tContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.float_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloat_t([NotNull] CorundumParser.Float_tContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.int_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_t([NotNull] CorundumParser.Int_tContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.int_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_t([NotNull] CorundumParser.Int_tContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.bool_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool_t([NotNull] CorundumParser.Bool_tContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.bool_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool_t([NotNull] CorundumParser.Bool_tContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.nil_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNil_t([NotNull] CorundumParser.Nil_tContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.nil_t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNil_t([NotNull] CorundumParser.Nil_tContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.id_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId_([NotNull] CorundumParser.Id_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.id_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId_([NotNull] CorundumParser.Id_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.id_global"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId_global([NotNull] CorundumParser.Id_globalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.id_global"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId_global([NotNull] CorundumParser.Id_globalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.id_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId_function([NotNull] CorundumParser.Id_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.id_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId_function([NotNull] CorundumParser.Id_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.terminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminator([NotNull] CorundumParser.TerminatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.terminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminator([NotNull] CorundumParser.TerminatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.else_token"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_token([NotNull] CorundumParser.Else_tokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.else_token"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_token([NotNull] CorundumParser.Else_tokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CorundumParser.crlf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCrlf([NotNull] CorundumParser.CrlfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CorundumParser.crlf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCrlf([NotNull] CorundumParser.CrlfContext context);
}
